buildscript {
    repositories {
         mavenLocal()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
    }
    //compile fileTree(dir: 'libs', include: '*.jar')
    //compile 'com.nineoldandroids:library:2.4.0'
}

allprojects {
    repositories {
        mavenLocal()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        mavenCentral()
        //maven{ url "https://oss.sonatype.org/content/repositories/snapshots" }
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'

android {
    /*
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
     */
   defaultConfig {
      versionCode 20
      minSdkVersion 23
      targetSdkVersion 26
      testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
   }
    compileSdkVersion 'android-28'
    buildToolsVersion '28.0.3'

    signingConfigs {
        release {
            storeFile file('keystore')
            storePassword 'password'
            keyAlias 'keystore'
            keyPassword 'password'
        }
    }
    buildTypes {
        release {
            //runProguard false
            signingConfig signingConfigs.release
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }

    sourceSets {
        main {
            //manifest.srcFile 'AndroidManifest.xml'
            //java.srcDirs = ['src']
            //resources.srcDirs = ['src']
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            //res.srcDirs = ['res']
            //assets.srcDirs = ['assets']
            jniLibs.srcDirs=['libs']
        }

    }
      lintOptions {
          checkReleaseBuilds false
          // Or, if you prefer, you can continue to check for errors in release builds,
          // but continue the build even when errors are found:
          abortOnError false
      }
}

//sourceCompatibility = 1.8

dependencies {
    //implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    //compile 'com.android.support:support-v4:18.0.0'
    //testImplementation 'com.google.android:android-test:4.1.1.4'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    //testImplementation 'com.android.support:support-v4:21.0.+'
    //testImplementation 'com.android.support:appcompat-v7:21.0.3'

    androidTestImplementation 'junit:junit:4.12'
    //androidTestImplementation 'org.mockito:mockito-core:2.15.0'
    //androidTestImplementation "com.google.dexmaker:dexmaker:1.2"
    //androidTestImplementation "com.google.dexmaker:dexmaker-mockito:1.2"
    //androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    //androidTestImplementation 'com.android.support.test:testing-support-lib:0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
}

wrapper {
    gradleVersion = '5.4.1'
}
